# ANNOTATED CDRNN MODEL FILE TEMPLATE.

# The CDRNN model file gives lots of control over the design.
# The default settings provided by this template are reasonable
# for the analyses we have tried, but as always, domain knowledge
# may motivate deviation in one or more settings.
# Please carefully read this template and consult the documentation
# (https://cdr.readthedocs.io/en/latest/) before running.

# The main inputs provided by the user are (1) paths to data, (2) an output
# directory, and (3) one or more model specifications. Values provided as "<>"
# are placeholders that must be filled in by the user.
# Fields marked as OPTIONAL below may be safely commented out.
# Fields marked as DEFAULT below may be commented out, in which case
# values will revert to repository defaults, which may differ from
# the defaults provided here.

# This repository is under active development. As a result, the details
# of this template are subject to change in future releases.



# DATA
[data]
# IMPORTANT: If train/dev/test partition the same dataset, X_train, X_dev, X_test should be THE SAME.
#            Only partition the responses.

# REQUIRED
# Path(s) to train set predictor tables (;-delimited if more than 1)
X_train = <PATH>(;<PATH)*
# Path to training set response table
y_train = <PATH>
# Space-delimited columns distinguishing unique time series
# (must all be present in all predictor and response tables).
# E.g. series_ids = participant experiment
series_ids = <COL>( <COL)*

# OPTIONAL
# Path(s) to dev set predictor tables (;-delimited if more than 1)
X_dev = <PATH>(;<PATH)*
# Path to dev set response table
y_dev = <PATH>
# Path(s) to test set predictor tables (;-delimited if more than 1)
X_test = <PATH>(;<PATH)*
# Path to test set response table
y_test = <PATH>
# Data retention conditions (;-delimited).
# Response data that fail any of these conditions will be dropped from fitting/evaluation.
# E.g. filters = y >= 1; y <= 100
filters = <COND>(;<COND)*

# DEFAULT
# Column delimiter (defaults to ' ')
sep = ' '
# Number of preceding timesteps used in convolution step
history_length = 128




# GLOBAL SETTINGS
[global_settings]
# REQUIRED
# Path to output directory
outdir = PATH




# CDR SETTINGS
[cdr_settings]
# DEFAULT (see docs for available options)
network_type = mle
optim_name = Nadam
n_iter = 15000
epsilon = 0.01
optim_epsilon = 1.0
learning_rate = 0.001
max_global_gradient_norm = 1
loss_filter_n_sds = 10000
minibatch_size = 128
eval_minibatch_size = 10000
convergence_n_iterates = 25
nn_regularizer_name = l2_regularizer
nn_regularizer_scale = 1e-3
context_regularizer_name = l1_l2_regularizer
context_regularizer_scale = 1e-2
ranef_regularizer_name = l2_regularizer
ranef_regularizer_scale = 1e-3
scale_regularizer_with_data = True
log_freq = 1
save_freq = 10

generate_irf_surface_plots = True
generate_curvature_plots = True




# IRF NAME MAP
# The entire `irf_name_map` section is optional and used only for plotting
# It provides a map from hard-to-read estimate names in the model specification
# to user-selected names for plotting, making plots more readable.
# Example:

[irf_name_map]
var1 = Variable 1




# MODEL(S)
# Arbitrarily many models can be specified below.
# They will all share the same inputs ([data] section above).
# To use different inputs, a different config file must be written.
# Each model has a corresponding section named as follows:
#
# [model_CDRNN(<SUFFIX>)]
#
# where the optional <SUFFIX> is a user-provided nickname for the model.
# All model sections contain at minimum a `formula` field specifying the model.
# Models may additionally provide an `ablate` field containing a space-delimited list
# of predictors to ablate. This will generate a unique model for the powerset of
# ablate, representing each logically possible ablation.
# Values from [cdr_settings] above will be inherited unless they are locally overridden.
# For example, to change the learning rate for a specific model, simply
# specify a `learning_rate = ...` field in the model's section.
#
# For details about CDR model formula syntax, see docs.
#
# Examples:
#
[model_CDRNN]
formula = y ~ var1

