[data]
X_train = reading_data/dundee_X.csv
X_dev = reading_data/dundee_X.csv
X_test = reading_data/dundee_X.csv
y_train = reading_data/dundee_y_train.csv
y_dev = reading_data/dundee_y_dev.csv
y_test = reading_data/dundee_y_test.csv
series_ids = subject docid
split_ids = subject sentid
modulus = 4

[global_settings]
outdir = results_naacl19/dundee_naacl19

[dtsr_settings]
network_type = bayes
declare_priors = False
ranef_regularizer_name = l2_regularizer
ranef_regularizer_scale = 1.
n_iter = 25000
n_sample = 1
learning_rate = 0.01
log_freq = 10
save_freq = 100

[irf_name_map]
DiracDelta.s(trial)-Terminal.s(trial) = Trial
DiracDelta.s(sentpos)-Terminal.s(sentpos) = Sentence position
ShiftedGammaShapeGT1.rate-Terminal.rate = Rate
ShiftedGammaShapeGT1.s(wdelta)-Terminal.s(wdelta) = Saccade length
ShiftedGammaShapeGT1.prevwasfix-Terminal.prevwasfix = Previous Fixated
ShiftedGammaShapeGT1.s(wlen)-Terminal.s(wlen) = Word length
ShiftedGammaShapeGT1.s(unigram)-Terminal.s(unigram) = Unigram logprob
ShiftedGammaShapeGT1.s(fwprob5surp)-Terminal.s(fwprob5surp) = 5-gram surprisal

[filters]
fdurGP = > 0
wdelta = <= 4
startofsentence = != 1
endofsentence = != 1
startofline = != 1
endofline = != 1
startofscreen = != 1
endofscreen = != 1
startoffile = != 1
endoffile = != 1

[model_DTSR_BBVI]
ablate = unigram fwprob5surp
formula = log(fdurGP) ~ C(s.(trial) + s.(sentpos), DiracDelta()) + C(rate + s.(wdelta) + prevwasfix + s.(wlen) + s.(unigram) + s.(fwprob5surp), ShiftedGammaShapeGT1(alpha=2, beta=5, delta=-0.2)) + (C(s.(trial) + s.(sentpos), DiracDelta()) + C(rate + s.(wdelta) + prevwasfix + s.(wlen) + s.(unigram) + s.(fwprob5surp), ShiftedGammaShapeGT1(ran=T)) | subject)


[model_LMEnoS]
formula = log(fdurGP) ~ z.(trial) + z.(sentpos) + z.(wdelta) + prevwasfix + z.(wlen) + z.(unigram) + z.(fwprob5surp) + (1 + z.(trial) + z.(sentpos) + z.(wdelta) + z.(prevwasfix) + z.(wlen) + z.(unigram) + z.(fwprob5surp) | subject)

[model_LMEfullS]
formula = log(fdurGP) ~ z.(trial) + z.(sentpos) + z.(wdelta) + z.(wdeltaS1) + z.(wdeltaS2) + z.(wdeltaS3) + prevwasfix + prevwasfixS1 + prevwasfixS2 + prevwasfixS3 + z.(wlen) + z.(wlenS1) + z.(wlenS2) + z.(wlenS3) + z.(unigram) + z.(unigramS1) + z.(unigramS2) + z.(unigramS3) + z.(fwprob5surp) + z.(fwprob5surpS1) + z.(fwprob5surpS2) + z.(fwprob5surpS3) + (1 + z.(trial) + z.(sentpos) + z.(wdelta) + z.(wdeltaS1) + z.(wdeltaS2) + z.(wdeltaS3) + prevwasfix + prevwasfixS1 + prevwasfixS2 + prevwasfixS3 + z.(wlen) + z.(wlenS1) + z.(wlenS2) + z.(wlenS3) + z.(unigram) + z.(unigramS1) + z.(unigramS2) + z.(unigramS3) + z.(fwprob5surp) + z.(fwprob5surpS1) + z.(fwprob5surpS2) + z.(fwprob5surpS3) | subject)

[model_GAMnoS]
formula = log(fdurGP) ~ s(z_trial) + s(z_sentpos) + s(z_wdelta, k=4) + prevwasfix + s(z_wlen) + s(z_unigram) + s(z_fwprob5surp) + s(subject, bs="re") + s(z_trial, subject, bs="re") + s(z_sentpos, subject, bs="re") + s(z_wdelta, subject, bs="re") + s(prevwasfix, subject, bs="re") + s(z_wlen, subject, bs="re") + s(z_unigram, subject, bs="re") + s(z_fwprob5surp, subject, bs="re")

[model_GAMfullS]
formula = log(fdurGP) ~ s(z_trial) + s(z_sentpos) + s(z_wdelta, k=4) + s(z_wdeltaS1, k=4) + s(z_wdeltaS2, k=4) + s(z_wdeltaS3, k=4) + prevwasfix + prevwasfixS1 + prevwasfixS2 + prevwasfixS3 + s(z_wlen) + s(z_wlenS1) + s(z_wlenS2) + s(z_wlenS3) + s(z_unigram) + s(z_unigramS1) + s(z_unigramS2) + s(z_unigramS3) + s(z_fwprob5surp) + s(z_fwprob5surpS1) + s(z_fwprob5surpS2) + s(z_fwprob5surpS3) + s(subject, bs="re") + s(z_trial, subject, bs="re") + s(z_sentpos, subject, bs="re") + s(z_wdelta, subject, bs="re") + s(z_wdeltaS1, subject, bs="re") + s(z_wdeltaS2, subject, bs="re") + s(z_wdeltaS3, subject, bs="re") + s(prevwasfix, subject, bs="re") + s(prevwasfixS1, subject, bs="re") + s(prevwasfixS2, subject, bs="re") + s(prevwasfixS3, subject, bs="re") + s(z_wlen, subject, bs="re") + s(z_wlenS1, subject, bs="re") + s(z_wlenS2, subject, bs="re") + s(z_wlenS3, subject, bs="re") + s(z_unigram, subject, bs="re") + s(z_unigramS1, subject, bs="re") + s(z_unigramS2, subject, bs="re") + s(z_unigramS3, subject, bs="re") + s(z_fwprob5surp, subject, bs="re") + s(z_fwprob5surpS1, subject, bs="re") + s(z_fwprob5surpS2, subject, bs="re") + s(z_fwprob5surpS3, subject, bs="re")

